if (x=5) and (y>6) and (z<7) or (a=2) then
begin
   b:=33;
end
else
begin
   c:=44;
end
----------------------------------------------------------------------------------------------------------------------------
                mov       EAX,[x]
                mov       EBX,5
                cmp       EAX,EBX
                JNE         OR1
                mov       EAX,[y]
                mov       EBX,6
                cmp       EAX,EBX
                JLE          OR1
                mov       EAX,[z]
                mov       EBX,7
                cmp       EAX,EBX
                JL            IF1
OR1:      mov       EAX,[a]
                mov       EBX,2
                cmp       EAX,EBX
                JE         IF1
                JMP      EE1
IF1:         mov       EAX,33
                mov       [B],EAX
                JMP       END1
EE1:        mov       EAX,44
                mov       [C],EAX
END1:



**********************************************************************************************************
if (x=5) or (y>6) or (z<7) and (a=2) then
begin
   b:=33;
end
else
begin
   c:=44;
end
----------------------------------------------------------------------------------------------------------------------------

                mov       EAX,[x]
                mov       EBX,5
                cmp       EAX,EBX
                JE            IF1
                mov       EAX,[y]
                mov       EBX,6
                cmp       EAX,EBX
                JG           IF1
                mov       EAX,[z]
                mov       EBX,7
                cmp       EAX,EBX
                JGE         OR1
                mov       EAX,[a]
                mov       EBX,2
                cmp       EAX,EBX
                JE            IF1
OR1:      JMP       EE1
IF1:         mov       EAX,33
                mov       [B],EAX
                JMP       END1
EE1:        mov       EAX,44
                mov       [C],EAX
END1:



**********************************************************************************************************
while (x=5) or (y>6) and(z<7) or (a=2) do
begin
   b:=33;
end

----------------------------------------------------------------------------------------------------------------------------

TW1:      mov       EAX,[x]
                mov       EBX,5
                cmp       EAX,EBX
                JE            IW1
                mov       EAX,[y]
                mov       EBX,6
                cmp       EAX,EBX
                JLE          OR1
                mov       EAX,[z]
                mov       EBX,7
                cmp       EAX,EBX
                JL            IW1
OR1:      mov       EAX,[a]
                mov       EBX,2
                cmp       EAX,EBX
                JE          IW1
                JMP         EW1
IW1:       mov       EAX,33
                mov       [B],EAX
                JMP       TW1
EW1:

**********************************************************************************************************
while (x=5) and (y>6) or (z<7) and (a=2) do
begin
   b:=33;
end

**********************************************************************************************************

TW1:      mov       EAX,[x]
                mov       EBX,5
                cmp       EAX,EBX
                JNE         OR1
                mov       EAX,[y]
                mov       EBX,6
                cmp       EAX,EBX
                JG           IW1
OR1:      mov       EAX,[z]
                mov       EBX,7
                cmp       EAX,EBX
                JGE         OR2
                mov       EAX,[a]
                mov       EBX,2
                cmp       EAX,EBX
                JE            IW1
OR2:      JMP       EW1
IW1:       mov       EAX,33
                mov       [B],EAX
                JMP       TW1
EW1:
**********************************************************************************************************
z:=0;
       x:=10;
       while x>0 do
       begin
              y:=0;
              while y < 10 do
              begin
                     y:=y+1;
                     z:=z+1;
              end;
              y:=0;
              while y < 10 do
              begin
                     y:=y+1;
                     z:=z+1;
              end;
              x:=x-1;
       end

**********************************************************************************************************
              mov eax, 0
              mov [ebp + 8], eax
              mov eax, 10
              mov [ebp + 0], eax
       TopWhile1:
              mov eax, [ebp + 0]
              mov ebx, 0
              cmp eax, ebx
              JG  BeginWhile1  
              JMP EndWhile1
       BeginWhile1:
              mov eax, 0
              mov [ebp + 4], eax
       TopWhile2:
              mov eax, [ebp + 4]
              mov ebx, 10
              cmp eax, ebx
              JL  BeginWhile2
              JMP EndWhile2
       BeginWhile2:
              mov eax, [ebp + 4]
              mov ebx, 1
              add eax, ebx
              mov [ebp + 4], eax
              mov eax, [ebp + 8]
              mov ebx, 1
              add eax, ebx
              mov [ebp + 8], eax
              jmp TopWhile2
       EndWhile2:
              mov eax, 0
              mov [ebp + 4], eax
       TopWhile3:
              mov eax, [ebp + 4]
              mov ebx, 10
              cmp eax, ebx
              JL BeginWhile3
              JMP EndWhile3
       BeginWhile3:
              mov eax, [ebp + 4]
              mov ebx, 1
              add eax, ebx
              mov [ebp + 4], eax
              mov eax, [ebp + 8]
              mov ebx, 1
              add eax, ebx
              mov [ebp + 8], eax
              jmp TopWhile3
       EndWhile3:
              mov eax, [ebp + 0]
              mov ebx, 1
              sub eax, ebx
              mov [ebp + 0], eax
              jmp TopWhile1
       EndWhile1: